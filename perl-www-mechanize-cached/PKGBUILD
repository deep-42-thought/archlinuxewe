# Maintainer: Erich Eckner <arch at eckner dot net>
# Generator : neuesPerlPaket (445682a1bd8a70c152ebe76ddf08deb3d21406c80f819873940cb0909a895cfcde52cc62469cd6f4e4d632f24b3df31e0eec78843cb778079f24dc33b18472ea)

pkgname='perl-www-mechanize-cached'
pkgver=1.51
pkgrel='2'
pkgdesc='Cache response to be polite'
arch=('any')
license=('PerlArtistic' 'GPL')
options=('!emptydirs')
optdepends=(
  'perl-chi')
depends=(
  'perl>=5.6.0'
  'perl-cache-cache'
  'perl-carp'
  'perl-data-dump'
  'perl-module-runtime'
  'perl-moo>=1.004005'
  'perl-moox-types-mooselike'
  'perl-namespace-clean'
  'perl-storable>=2.21'
  'perl-www-mechanize')
makedepends=(
  'perl-chi'
  'perl-constant'
  'perl-extutils-makemaker'
  'perl-find-lib'
  'perl-http-message'
  'perl-lib'
  'perl-path-class'
  'perl-pathtools'
  'perl-test-fatal'
  'perl-test-requires'
  'perl-test-requiresinternet'
  'perl-test-simple')
checkdepends=(
  'perl'
  'perl-cpan-changes'
  'perl-pod-coverage-trustpod'
  'perl-test-perl-critic'
  'perl-test-pod-coverage'
  'perl-test-simple'
)
url='https://metacpan.org/release/WWW-Mechanize-Cached'
_distdir="WWW-Mechanize-Cached-${pkgver}"
source=("https://cpan.metacpan.org/authors/id/O/OA/OALDERS/${_distdir}.tar.gz")
sha512sums=('0b318656e4f4dcad31f05fbea6062c830324d15b8a8b41d0845e57607d60840c2fd0e19db7572f1b7349739abb6feb2fd879dc4838178e4628a859ef18869b7c')

build() {
  cd "${srcdir}/${_distdir}"

  # Setting these env variables overwrites any command-line-options we don't want...
  export PERL_MM_USE_DEFAULT=1 PERL_AUTOINSTALL=--skipdeps \
    PERL_MM_OPT="INSTALLDIRS=vendor DESTDIR='${pkgdir}'" \
    PERL_MB_OPT="--installdirs vendor --destdir '${pkgdir}'" \
    MODULEBUILDRC=/dev/null

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    perl Makefile.PL
    make
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build.PL
    perl Build
  fi
}

check() {
  cd "${srcdir}/${_distdir}"

  export AUTHOR_TESTING=1
  export RELEASE_TESTING=1

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    make test
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build test
  fi
}

package() {
  cd "${srcdir}/${_distdir}"

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    make install
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build install
  fi

  # remove perllocal.pod and .packlist
  find "${pkgdir}" -name .packlist -o -name perllocal.pod -delete
}
