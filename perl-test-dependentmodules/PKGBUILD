# Maintainer: Erich Eckner <arch at eckner dot net>
# Generator : neuesPerlPaket (5872fdbe767f20dd006eece094815303adfcd3b336cb5ad02d10742b82e6f11e31530fef3b41a2af59678d729daebff83cde847dab68d62647f62cf8dc586685)

pkgname='perl-test-dependentmodules'
pkgver=0.27
pkgrel=4
pkgdesc='Test all modules which depend on your module'
arch=('any')
license=('PerlArtistic' 'GPL')
options=('!emptydirs')
optdepends=(
  'perl-parallel-forkmanager')
makedepends=(
  'perl-extutils-makemaker'
  'perl-file-copy-recursive'
  'perl-module-build'
  'perl-module-build-tiny'
  'perl-test-simple>=0.96')
depends=(
  'perl>=5.34'
  'perl<5.35'
  'perl'
  'perl-autodie'
  'perl-capture-tiny'
  'perl-cpan'
  'perl-exporter'
  'perl-file-chdir'
  'perl-file-path'
  'perl-file-temp'
  'perl-io-handle-util'
  'perl-ipc-run3'
  'perl-json-pp'
  'perl-log-dispatch'
  'perl-metacpan-client'
  'perl-pathtools'
  'perl-test-simple'
  'perl-try-tiny')
checkdepends=(
  'perl-namespace-clean'
  'perl-test-eol'
  'perl-test-mojibake'
  'perl-test-notabs'
  'perl-test-pod'
  'perl-test-spelling'
  'perl-test-version')
url='https://metacpan.org/release/Test-DependentModules'
_distdir="Test-DependentModules-${pkgver}"
source=("https://cpan.metacpan.org/authors/id/D/DR/DROLSKY/${_distdir}.tar.gz")
sha512sums=('3d55006dd186bee3592cc250da1a7c76c85fe9c92859943603d89de0bb26f53f3629750aff744eb8cf55a8521729ce6ddcfa9770e78e7d587ed23e8a267e12a5')

build() {
  cd "${srcdir}/${_distdir}"

  # Setting these env variables overwrites any command-line-options we don't want...
  export PERL_MM_USE_DEFAULT=1 PERL_AUTOINSTALL=--skipdeps \
    PERL_MM_OPT="INSTALLDIRS=vendor DESTDIR='${pkgdir}'" \
    PERL_MB_OPT="--installdirs vendor --destdir '${pkgdir}'" \
    MODULEBUILDRC=/dev/null

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    perl Makefile.PL
    make
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build.PL
    perl Build
  fi
}

check() {
  cd "${srcdir}/${_distdir}"

  export AUTHOR_TESTING=1

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    make test
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build test
  fi
}

package() {
  cd "${srcdir}/${_distdir}"

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    make install
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build install
  fi

  # remove perllocal.pod and .packlist
  find "${pkgdir}" -name .packlist -o -name perllocal.pod -delete
}
