# Maintainer: Erich Eckner <arch at eckner dot net>
# Generator : neuesPerlPaket (54bfd7cca693b229aa53ffc98d551b62ea234aaa5be7e6717857610a2da6803b0be2dfe7ddfe9810cf320c477023b3b4356d47df7f8c202ed8c14d71b472c0bc)

pkgname='perl-module-install'
pkgver='1.18'
pkgrel='3'
pkgdesc='Standalone, extensible Perl module installer'
arch=('any')
license=('PerlArtistic' 'GPL')
options=('!emptydirs')
optdepends=(
  'perl-archive-zip>=1.37'
  'perl-file-homedir>=1'
  'perl-json>=2.9'
  'perl-libwww>=6.05'
  'perl-lwp-simple>=6.00'
  'perl-par-dist>=0.29')
depends=(
  'perl>=5.6.0'
  'perl-cpan-meta>=1.4413'
  'perl-devel-ppport>=3.16'
  'perl-extutils-install>=1.52'
  'perl-extutils-makemaker>=6.59'
  'perl-extutils-parsexs>=2.19'
  'perl-file-path'
  'perl-file-remove>=1.42'
  'perl-module-build>=0.29'
  'perl-module-corelist>=2.17'
  'perl-module-scandeps>=1.09'
  'perl-pathtools>=3.28'
  'perl-yaml-tiny>=1.38')
makedepends=(
  'perl-autodie'
  'perl-extutils-makemaker>=6.59'
  'perl-test-harness>=3.13'
  'perl-test-simple>=0.86'
  'perl-yaml-tiny>=1.33')
url='https://metacpan.org/release/Module-Install'
_distdir="Module-Install-${pkgver}"
source=("https://cpan.metacpan.org/authors/id/E/ET/ETHER/${_distdir}.tar.gz"
  '22_installdirs.t.diff')
sha512sums=('2126d35c9bab151548551629e6a470f9a7b90fd901f32cdc15e9aa83b931178f99e28e2de32ce7b8a677d187474efc428839d7e7254074f26fcfcfe18fa297a9'
  'c71670b86e2168f23ce6948632264e55259173d378072a815e56c03e5cd3451b7b9d3064ccdb0454e2ae4bb2621f92231da69d8c757d66bff00277e96dd2de91')

prepare() {
  cd "${srcdir}/${_distdir}"
  patch -p0 -i "../22_installdirs.t.diff"
}

build() {
  cd "${srcdir}/${_distdir}"

  # Setting these env variables overwrites any command-line-options we don't want...
  export PERL_MM_USE_DEFAULT=1 PERL_AUTOINSTALL=--skipdeps \
    PERL_MM_OPT="INSTALLDIRS=vendor DESTDIR='${pkgdir}'" \
    PERL_MB_OPT="--installdirs vendor --destdir '${pkgdir}'" \
    MODULEBUILDRC=/dev/null

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    perl Makefile.PL
    make
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build.PL
    perl Build
  fi
}

check() {
  cd "${srcdir}/${_distdir}"

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    make test
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build test
  fi
}

package() {
  cd "${srcdir}/${_distdir}"

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    make install
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build install
  fi

  # remove perllocal.pod and .packlist
  find "${pkgdir}" -name .packlist -o -name perllocal.pod -delete
}
