# Maintainer:  Erich Eckner <arch at eckner dot net>
# Contributor: Christopher Reimer <mail+aur[at]c-reimer[dot]de>
# Contributor: Kevin Mihelich <kevin@archlinuxarm.org>

pkgbase=uboot-sunxi
pkgname=('uboot-a10-olinuxino-lime'
         'uboot-a10s-olinuxino-micro'
         'uboot-a13-olinuxino'
         'uboot-a13-olinuxino-micro'
         'uboot-a20-olinuxino-lime'
         'uboot-a20-olinuxino-lime2'
         'uboot-a20-olinuxino-micro'
         'uboot-bananapi'
         'uboot-cubieboard'
         'uboot-cubieboard2'
         'uboot-cubietruck'
         'uboot-pcduino'
         'uboot-pcduino3'
         'uboot-pcduino3-nano')
pkgver=2019.07
pkgrel=1
arch=('armv7h')
url="http://git.denx.de/u-boot.git/"
license=('GPL')
makedepends=('git' 'bc' 'dtc' 'python2')
backup=(boot/boot.txt boot/boot.scr)
source=("ftp://ftp.denx.de/pub/u-boot/u-boot-${pkgver}.tar.bz2"
        'boot.txt'
        'mkscr')
sha512sums=('879abf0c8773bfcdcbe7f28fc68e2b4369bcb74e276d95d510a9b2d1707e63eb01d82e304ba5a6a570552bc18bc593f27ba9b518bafa1d8f8e5bc83cf107c023'
            'f2978ea8acc39fccd0269eb74248e622d1e5daf0b30a2c48ac1d618deda3b4733e949d21bff5dbd2e5b6c39f0df60480c55e3ee1bf8e64df2c8157a51f2fbb49'
            '7046ab4d88efbba636be049be2f660e18c05e48d161d39437c1580b12795ba4d9197ad57ac4572398f80a38d4777507b57228abf4cc41f0081d196ece27ea9d0')

boards=('A10-OLinuXino-Lime'
        'A10s-OLinuXino-M'
        'A13-OLinuXino'
        'A13-OLinuXinoM'
        'A20-OLinuXino-Lime'
        'A20-OLinuXino-Lime2'
        'A20-OLinuXino_MICRO'
        'Bananapi'
        'Cubieboard'
        'Cubieboard2'
        'Cubietruck'
        'Linksprite_pcDuino'
        'Linksprite_pcDuino3'
        'Linksprite_pcDuino3_Nano')

prepare() {
  cd u-boot-${pkgver}

  sed -i 's/env python$/&2/' tools/binman/binman{,.py}
}

build() {
  cd u-boot-${pkgver}

  unset CFLAGS CXXFLAGS LDFLAGS

  for i in ${boards[@]}; do
    mkdir ../bin_${i}
    make distclean
    make ${i}_config
    echo 'CONFIG_IDENT_STRING=" Arch Linux ARM"' >> .config
    make EXTRAVERSION=-${pkgrel}
    mv u-boot-sunxi-with-spl.bin ../bin_${i}
  done

  tools/mkimage -A arm -O linux -T script -C none -n "U-Boot boot script" -d ../boot.txt ../boot.scr
}

package_uboot-a10-olinuxino-lime() {
  pkgdesc="U-Boot for A10 OLinuXino Lime"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_A10-OLinuXino-Lime/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-a10s-olinuxino-micro() {
  pkgdesc="U-Boot for A10s OLinuXino Micro"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_A10s-OLinuXino-M/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-a13-olinuxino() {
  pkgdesc="U-Boot for A13 OLinuXino"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_A13-OLinuXino/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-a13-olinuxino-micro() {
  pkgdesc="U-Boot for A13 OLinuXino Micro"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_A13-OLinuXinoM/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-a20-olinuxino-lime() {
  pkgdesc="U-Boot for A20 OLinuXino Lime"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_A20-OLinuXino-Lime/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-a20-olinuxino-lime2() {
  pkgdesc="U-Boot for A20 OLinuXino Lime2"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_A20-OLinuXino-Lime2/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-a20-olinuxino-micro() {
  pkgdesc="U-Boot for A20 OLinuXino Micro"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_A20-OLinuXino_MICRO/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-bananapi() {
  pkgdesc="U-Boot for BananaPi"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_Bananapi/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot/u-boot-sunxi-with-spl.bin

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-cubieboard() {
  pkgdesc="U-Boot for Cubieboard"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_Cubieboard/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot/u-boot-sunxi-with-spl.bin

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-cubieboard2() {
  pkgdesc="U-Boot for Cubieboard 2"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_Cubieboard2/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot/u-boot-sunxi-with-spl.bin

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-cubietruck() {
  pkgdesc="U-Boot for Cubietruck"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_Cubietruck/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot/u-boot-sunxi-with-spl.bin

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-pcduino() {
  pkgdesc="U-Boot for pcDuino"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_Linksprite_pcDuino/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-pcduino3() {
  pkgdesc="U-Boot for pcDuino3"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_Linksprite_pcDuino3/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}

package_uboot-pcduino3-nano() {
  pkgdesc="U-Boot for pcDuino3 Nano"
  install=${pkgbase}.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_Linksprite_pcDuino3_Nano/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}
