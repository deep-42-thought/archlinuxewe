# Maintainer:  Erich Eckner <arch at eckner dot net>
# Contributor: Christopher Reimer <mail+aur[at]c-reimer[dot]de>
# Contributor: Kevin Mihelich <kevin@archlinuxarm.org>

# ist alles absichtlich nicht any ohne ELF Dateien

pkgbase=uboot-sunxi
_boards=(
  'uboot-a10-olinuxino-lime A10-OLinuXino-Lime'
  'uboot-a10s-olinuxino-micro A10s-OLinuXino-M'
  'uboot-a13-olinuxino A13-OLinuXino'
  'uboot-a13-olinuxino-micro A13-OLinuXinoM'
  'uboot-a20-olinuxino-lime A20-OLinuXino-Lime'
  'uboot-a20-olinuxino-lime2 A20-OLinuXino-Lime2'
  'uboot-a20-olinuxino-micro A20-OLinuXino_MICRO'
  'uboot-bananapi Bananapi'
#  'uboot-bananapi-m1-plus bananapi_m1_plus'
#  'uboot-bananapi-m2-berry bananapi_m2_berry'
#  'uboot-Bananapi-m2m Bananapi_m2m'
#  'uboot-bananapi-m2-plus_h3 bananapi_m2_plus_h3'
#  'uboot-bananapi-m2-plus_h5 bananapi_m2_plus_h5'
#  'uboot-Bananapi-m2-ultra Bananapi_M2_Ultra'
#  'uboot-bananapi-m2-zero bananapi_m2_zero'
#  'uboot-Bananapro Bananapro'
  'uboot-cubieboard Cubieboard'
  'uboot-cubieboard2 Cubieboard2'
  'uboot-cubietruck Cubietruck'
  'uboot-pcduino Linksprite_pcDuino'
  'uboot-pcduino3 Linksprite_pcDuino3'
  'uboot-pcduino3-nano Linksprite_pcDuino3_Nano'
)
pkgname=("${_boards[@]%% *}")
pkgdesc='U-Boot for several architectures'
pkgver=2020.10
pkgrel=1
arch=('armv7h')
url="http://git.denx.de/u-boot.git/"
license=('GPL')
makedepends=('git' 'swig' 'bc' 'dtc' 'python2' 'python')
backup=(boot/boot.txt boot/boot.scr)
source=("ftp://ftp.denx.de/pub/u-boot/u-boot-${pkgver}.tar.bz2"
        'boot.txt'
        'mkscr')
sha512sums=('fd26534f2d72ffc3167919c32067c550636f6a4ee5fead6937e2583ba4ff6165e88b8b50fbbddde7354a8c42701433d0cb2ce982e43c014db60b08415288baf9'
            'f2978ea8acc39fccd0269eb74248e622d1e5daf0b30a2c48ac1d618deda3b4733e949d21bff5dbd2e5b6c39f0df60480c55e3ee1bf8e64df2c8157a51f2fbb49'
            '7046ab4d88efbba636be049be2f660e18c05e48d161d39437c1580b12795ba4d9197ad57ac4572398f80a38d4777507b57228abf4cc41f0081d196ece27ea9d0')

prepare() {
  cd u-boot-${pkgver}

  sed -i '
    1 s/env python$/&2/
    1 s/\(env python\)3$/\1/
  ' tools/binman/binman{,.py}
}

build() {
  cd u-boot-${pkgver}

  unset CFLAGS CXXFLAGS LDFLAGS

  for i in "${_boards[@]#* }"; do
    mkdir ../bin_${i}
    make distclean
    make ${i}_config
    echo 'CONFIG_IDENT_STRING=" Arch Linux ARM"' >> .config
    make EXTRAVERSION=-${pkgrel}
    mv u-boot-sunxi-with-spl.bin ../bin_${i}
  done

  tools/mkimage -A arm -O linux -T script -C none -n "U-Boot boot script" -d ../boot.txt ../boot.scr
}

for i in "${!_boards[@]}"; do
  _pn="${_boards[${i}]%% *}"
  _pd="${_boards[${i}]#* }"

  eval 'package_'"${_pn}"'() {
  pkgdesc="U-Boot for '"${_pd#Linksprite_}"'"
  install=${pkgbase}.install
  provides=('"'"'uboot-sunxi'"'"')
  conflicts=('"'"'uboot-sunxi'"'"')

  install -d "${pkgdir}"/boot
  install -Dm644 bin_'"${_pd}"'/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 boot.txt "${pkgdir}"/boot/boot.txt
  install -Dm644 boot.scr "${pkgdir}"/boot/boot.scr
  install -Dm755 mkscr "${pkgdir}"/boot/mkscr
}'

done
