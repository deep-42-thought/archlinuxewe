# Maintainer: Erich Eckner <arch at eckner dot net>
# Generator : neuesPerlPaket (97841193a0046800a1ed3cebc0718afe92066b6f1190519a623e66830c355902620a8d956439b9825c773ea4af1a5a3ff917dc0d9a50bafb588ca09da5980c74)

pkgname='perl-perinci-sub-complete'
pkgver=0.936
pkgrel=1
pkgdesc='Complete command-line argument using Rinci metadata'
arch=('any')
license=('PerlArtistic' 'GPL')
options=('!emptydirs')
makedepends=(
  'perl'
  'perl-complete-bash>=0.322'
  'perl-extutils-makemaker'
  'perl-io'
  'perl-monkey-patch-action>=0.060'
  'perl-pathtools'
  'perl-perinci-examples>=0.811'
  'perl-perinci-sub-normalize>=0.19'
  'perl-sah-schemas-int'
  'perl-test-exception'
  'perl-test-simple>=0.98')
depends=(
  'perl>=5.10.1'
  'perl-complete-common>=0.22'
  'perl-complete-getopt-long>=0.471'
  'perl-complete-util>=0.601'
  'perl-data-sah-normalize'
  'perl-exporter>=5.57'
  'perl-log-ger>=0.027'
  'perl-module-installed-tiny'
  'perl-perinci-sub-getargs-argv>=0.842'
  'perl-perinci-sub-util>=0.46')
checkdepends=(
  'perl-pod-coverage-trustpod'
  'perl-test-perl-critic'
  'perl-test-pod'
  'perl-test-pod-coverage'
  'perl-test-rinci'
  'perl-test-simple'
)
url='https://metacpan.org/release/Perinci-Sub-Complete'
_distdir="Perinci-Sub-Complete-${pkgver}"
source=("https://cpan.metacpan.org/authors/id/P/PE/PERLANCAR/${_distdir}.tar.gz")
sha512sums=('fe713d6ea7a9296aaf7faba29280d412b23dc457e7b85c82b0bd234dce099ae2e46ed9ae1e9378ee721f5f960e525d73deda892fa7b0702d37d3c3446e54297f')

prepare() {
  rm "${srcdir}/${_distdir}/t/author-critic.t"
  rm "${srcdir}/${_distdir}/t/complete_cli_arg.t"
}

build() {
  cd "${srcdir}/${_distdir}"

  # Setting these env variables overwrites any command-line-options we don't want...
  export PERL_MM_USE_DEFAULT=1 PERL_AUTOINSTALL=--skipdeps \
    PERL_MM_OPT="INSTALLDIRS=vendor DESTDIR='${pkgdir}'" \
    PERL_MB_OPT="--installdirs vendor --destdir '${pkgdir}'" \
    MODULEBUILDRC=/dev/null

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    perl Makefile.PL
    make
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build.PL
    perl Build
  fi
}

check() {
  cd "${srcdir}/${_distdir}"

  export AUTHOR_TESTING=1
  export RELEASE_TESTING=1

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    make test
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build test
  fi
}

package() {
  cd "${srcdir}/${_distdir}"

  # If using Makefile.PL
  if [ -r Makefile.PL ]; then
    make install
  # If using Build.PL
  elif [ -r Build.PL ]; then
    perl Build install
  fi

  # remove perllocal.pod and .packlist
  find "${pkgdir}" -name .packlist -o -name perllocal.pod -delete
}
